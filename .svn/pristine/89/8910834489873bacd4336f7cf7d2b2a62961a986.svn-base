Imports System
Imports System.IO
Imports System.Threading
Imports System.Management
Imports System.Text.RegularExpressions
Imports MySql.Data.MySqlClient
Public Class frmSMSNotification
    Dim rcvdata As String = ""
    Dim strSelectedAssignCode As String
    Dim index As String = ""
    Dim csstring As String = "server=localhost;uid=root;pwd=admin;database=ebulletindb;"
    Private Sub frmSMSNotification_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        btnLoadMessages.Text = "Load Messages"
        cboModem.Items.Clear()

        Dim ports() As String
        ports = Split(ModemsConnected(), "***")

        For i As Integer = 0 To ports.Length - 2
            cboModem.Items.Add(ports(i))
        Next

        Timer1.Interval = 20000
        Timer1.Start()
    End Sub
    Public Function ModemsConnected() As String
        Dim modems As String = ""
        Try
            Dim searcher As New Management.ManagementObjectSearcher("root\CIMV2", "SELECT * FROM Win32_POTSModem")

            For Each queryObject As ManagementObject In searcher.Get()
                If queryObject("Status") = "OK" Then
                    modems = modems & (queryObject("AttachedTo") & " - " & queryObject("Description") & "***")

                End If
            Next
        Catch ex As Exception
            MsgBox("An error occured while querying for WMI data: ", MsgBoxStyle.Critical, "Error")
            Return ""

        End Try
        Return modems
    End Function
    Private Sub TextBox1_Click(sender As Object, e As EventArgs) Handles txtSmsno.Click
        txtSmsno.Text = ""
    End Sub
    Private Sub serialport1_datareceived(ByVal sender As Object, ByVal e As System.IO.Ports.SerialDataReceivedEventArgs) Handles SerialPort1.DataReceived
        Dim datain As String = ""
        Dim numbytes As Integer = SerialPort1.BytesToRead
        Thread.Sleep(300)
        For i As Integer = 1 To numbytes
            datain &= SerialPort1.ReadExisting
        Next
        test(datain)
    End Sub
    Private Sub test(ByVal indata As String)
        rcvdata &= indata
    End Sub
    Private Sub btnConnect_Click(sender As Object, e As EventArgs) Handles btnConnect.Click
        If Label1.Text = "Port" Then
            MsgBox("Please select port to connect.", MsgBoxStyle.Critical, "Validation")
            Exit Sub
        End If
        Try
            With SerialPort1
                .PortName = "COM19"
                .BaudRate = 9600
                .Parity = Ports.Parity.None
                .DataBits = 8
                .StopBits = Ports.StopBits.One
                .Handshake = Ports.Handshake.None
                .RtsEnable = True
                .ReceivedBytesThreshold = 1
                .NewLine = vbCr
                .ReadTimeout = 1000
                .Open()
            End With
            If SerialPort1.IsOpen Then
                lblConnected.Text = "Connected to"
            Else
                lblConnected.Text = "Error"
            End If
        Catch ex As Exception
            MsgBox(ex.Message, MsgBoxStyle.Critical, "Error")
        End Try
    End Sub
    Public Sub LoadMessages()
        If lblConnected.Text = "" Then
            MsgBox("Please connect to port.", MsgBoxStyle.Critical, "Validation")
            Exit Sub
        End If
        btnLoadMessages.Text = "Refresh Messages"
        lvRead.Items.Clear()
        txtContent.Text = ""
        Try
            With SerialPort1
                rcvdata = ""
                .Write("AT" & vbCrLf)
                Threading.Thread.Sleep(1000)
                .Write("AT+CMGF=1" & vbCrLf)
                Threading.Thread.Sleep(1000)
                .Write("AT+CPMS=""SM""" & vbCrLf)
                Threading.Thread.Sleep(1000)
                .WriteLine("AT+CMGL=""REC UNREAD""" & vbCrLf) 'read unread messages
                Threading.Thread.Sleep(1000)
                .Write("AT+CMGL=""ALL""" & vbCrLf)
                Threading.Thread.Sleep(1000)
                ReadMsg()
            End With
        Catch ex As Exception
            MsgBox(ex.Message, MsgBoxStyle.Critical, "Error")
        End Try
    End Sub
    Private Sub ReadMsg()
        Try
            Dim lineoftext As String
            Dim i As Integer
            Dim arytextfile() As String
            lineoftext = rcvdata.ToString
            arytextfile = Split(lineoftext, "+CMGL", , CompareMethod.Text)
            For i = 3 To UBound(arytextfile)
                Dim input As String = arytextfile(i)
                Dim result() As String
                Dim pattern As String = "(:)|(,"")|("","")|(,)"
                result = Regex.Split(input, pattern)
                Dim lvi As New ListViewItem
                With lvRead.Items.Add(result(16))
                    ' lvi.BackColor = Color.DarkRed
                    'index
                    .SubItems.AddRange(New String() {result(2)})
                    'status 
                    .SubItems.AddRange(New String() {result(2)})
                    'number
                    Dim my_string, position As String
                    my_string = result(6)
                    position = my_string.Length - 1
                    my_string = my_string.Remove(position, 1)
                    .SubItems.Add(my_string)
                    'messsage
                    .SubItems.AddRange(New String() {result(10)})
                    Dim mystring
                    mystring = result(16)
                    mystring = mystring.remove(0, 6)
                    .SubItems.Add(mystring)
                    ' .SubItems.AddRange(New String() {result(16)})
                End With
            Next
        Catch ex As Exception
            MsgBox(ex.Message, MsgBoxStyle.Critical, "Error")
        End Try
    End Sub
    Private Sub btnSend_Click(sender As Object, e As EventArgs) Handles btnSend.Click
        If lblConnected.Text = "" Then
            MsgBox("Please connect to port.", MsgBoxStyle.OkOnly, "Validation")
            Exit Sub
        ElseIf txtSmsno.Text = "" Then
            MsgBox("Please enter contact number.", MsgBoxStyle.OkOnly, "Validation")
            Exit Sub
        ElseIf txtMsg.Text.Trim = "" Then
            MsgBox("Please enter message to send.", MsgBoxStyle.OkOnly, "Validation")
            Exit Sub
        End If
        Try
            With SerialPort1
                .Write("AT" & vbCrLf)
                Threading.Thread.Sleep(100)
                .Write("AT+CMGF=1" & vbCrLf)
                Threading.Thread.Sleep(100)
                .Write("AT+CMGS=" & Chr(34) & txtSmsno.Text & Chr(34) & vbCrLf)
                .Write(txtMsg.Text & Chr(26) & vbCrLf)
                Threading.Thread.Sleep(100)
            End With

            If rcvdata.ToString.Contains(">") Then
                MsgBox("Message Sent", MsgBoxStyle.Information, "SMS")
            Else
                MsgBox("Got some error", MsgBoxStyle.Critical, "Error")
            End If
        Catch ex As Exception
            MsgBox(ex.Message, MsgBoxStyle.Critical, "Error")
        End Try
        txtSmsno.Text = ""
        txtMsg.Text = ""
        txtSmsno.Focus()
    End Sub
    Private Sub btnLoadMessages_Click(sender As Object, e As EventArgs) Handles btnLoadMessages.Click
        Call LoadMessages()
    End Sub
    Private Sub lvRead_SelectedIndexChanged(sender As Object, e As EventArgs) Handles lvRead.Click
        txtContent.Text = lvRead.SelectedItems(0).Text
    End Sub
    Private Sub ListView1_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles lvRead.MouseDown
        Try
            If IsNothing(lvRead.FocusedItem) Then Exit Sub
            strSelectedAssignCode = lvRead.FocusedItem.Text
            If e.Button = MouseButtons.Right Then
                If lvRead.SelectedItems.Count > 0 Then
                    ContextMenuStrip1.Show(lvRead, New Point(e.X, e.Y))
                End If
            End If
        Catch ex As Exception
            MsgBox(ex.Message, MsgBoxStyle.Critical, "Error")
        End Try
    End Sub
    Private Sub lvRead_SelectedIndexChanged_1(sender As Object, e As EventArgs) Handles lvRead.SelectedIndexChanged
        Try
            txtContent.Text = lvRead.FocusedItem.SubItems(5).Text
            With lvRead.FocusedItem
                index = .SubItems(1).Text
            End With
        Catch ex As Exception
            MsgBox(ex.Message, MsgBoxStyle.Critical, "Error")
        End Try
    End Sub
    Private Sub cboModem_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cboModem.SelectedIndexChanged
        Label1.Text = Trim(Mid(cboModem.Text, 1, 5))
    End Sub
    Private Sub ReplyToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles ReplyToolStripMenuItem.Click
        txtSmsno.Text = lvRead.FocusedItem.SubItems(3).Text
        txtMsg.Focus()
    End Sub
    Private Sub DeleteToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles DeleteToolStripMenuItem.Click
        If MsgBox("Are you sure you want to delete this message?", vbYesNo + MsgBoxStyle.Information, "Delete") = MsgBoxResult.Yes Then
            Try
                With SerialPort1
                    .Write("AT")
                    Threading.Thread.Sleep(1)
                    .Write("AT+CMGF=1")
                    Threading.Thread.Sleep(1)
                    .Write("AT+CPMS=""SM""" & vbCrLf)
                    Threading.Thread.Sleep(1)
                    .Write("AT+CMGD=" & Val(index) & ",0")
                    Threading.Thread.Sleep(1)
                    LoadMessages()
                    MsgBox("Message deleted.", MsgBoxStyle.Information, "Delete")
                End With
            Catch ex As Exception
                MsgBox(ex.Message, MsgBoxStyle.Critical, "Error")
            End Try
        Else
            Exit Sub
        End If
    End Sub
    Private Sub DeleteAllToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles DeleteAllToolStripMenuItem.Click
        If MsgBox("Are you sure you want to delete meesages all?", vbYesNo + MsgBoxStyle.Information, "Delete") = MsgBoxResult.Yes Then
            Try
                With SerialPort1
                    .Write("AT")
                    Threading.Thread.Sleep(1000)
                    .Write("AT+CMGF=1")
                    Threading.Thread.Sleep(1000)
                    .Write("AT+CPMS=""SM""" & vbCrLf)
                    Threading.Thread.Sleep(1000)

                    .Write("AT+CMGD=1,4")
                    Threading.Thread.Sleep(1000)
                    LoadMessages()
                    MsgBox("Messages deleted.", MsgBoxStyle.Information, "Delete")
                End With
            Catch ex As Exception
                MsgBox(ex.Message, MsgBoxStyle.Critical, "Error")
            End Try
        Else
            Exit Sub
        End If
    End Sub
    Private Sub btnSelect_Click(sender As Object, e As EventArgs) Handles btnSelect.Click
        frmPhoneBook.ShowDialog()
    End Sub
    Private Sub SaveToPhonebookToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles SaveToPhonebookToolStripMenuItem.Click
        If lvRead.SelectedItems.Count > 0 Then
            frmAddPhonebook.txtMobile.Text = lvRead.Items(0).SubItems(3).Text
            frmAddPhonebook.ShowDialog()
        End If
    End Sub

    Private Sub btnApprove_Click(sender As Object, e As EventArgs) Handles btnApprove.Click
        If txtContent.Text = "" Then
            MsgBox("Please edit carefully the message that will be posted on announcement!", MsgBoxStyle.Critical, "Announcement")
        Else
            If frmAnnouncement.txtAnnouncement.Text = "" Then
                Try
                    con = New MySqlConnection(csstring)
                    con.Open()
                    strSQL = "Insert into tblannouncement(message, dateentry) values('" & txtContent.Text.Trim & "','" & Format(Date.Today, "MMMM dd, yyyy") & "')"
                    cmd = New MySqlCommand(strSQL, con)
                    cmd.ExecuteNonQuery()
                    If con.State <> ConnectionState.Open Then
                        con.Close()
                    End If
                    frmAnnouncement.txtAnnouncement.Text = txtContent.Text
                    frmAnnouncement.lblDate1.Text = Format(Date.Today, "MMMM dd, yyyy")
                    MsgBox("Announcement has been posted today " & Format(Date.Today, "MMMM dd, yyyy") & "", MsgBoxStyle.Information, "Announcement Posted")
                Catch ex As Exception
                    MsgBox(ex.Message, MsgBoxStyle.Critical, "Error")
                End Try
            ElseIf frmAnnouncement.txtAnnouncement2.Text = "" Then
                Try
                    con = New MySqlConnection(csstring)
                    con.Open()
                    strSQL = "Insert into tblannouncement(message, dateentry) values('" & txtContent.Text.Trim & "','" & Format(Date.Today, "MMMM dd, yyyy") & "')"
                    cmd = New MySqlCommand(strSQL, con)
                    cmd.ExecuteNonQuery()
                    If con.State <> ConnectionState.Open Then
                        con.Close()
                    End If
                    frmAnnouncement.txtAnnouncement2.Text = txtContent.Text
                    frmAnnouncement.lblDate2.Text = Format(Date.Today, "MMMM dd, yyyy")
                    MsgBox("Announcement has been posted today " & Format(Date.Today, "MMMM dd, yyyy") & "", MsgBoxStyle.Information, "Announcement Posted")
                Catch ex As Exception
                    MsgBox(ex.Message, MsgBoxStyle.Critical, "Error")
                End Try
            ElseIf frmAnnouncement.txtAnnouncement3.Text = "" Then
                Try
                    con = New MySqlConnection(csstring)
                    con.Open()
                    strSQL = "Insert into tblannouncement(message, dateentry) values('" & txtContent.Text.Trim & "','" & Format(Date.Today, "MMMM dd, yyyy") & "')"
                    cmd = New MySqlCommand(strSQL, con)
                    cmd.ExecuteNonQuery()
                    If con.State <> ConnectionState.Open Then
                        con.Close()
                    End If
                    frmAnnouncement.txtAnnouncement3.Text = txtContent.Text
                    frmAnnouncement.lblDate3.Text = Format(Date.Today, "MMMM dd, yyyy")
                    MsgBox("Announcement has been posted today " & Format(Date.Today, "MMMM dd, yyyy") & "", MsgBoxStyle.Information, "Announcement Posted")
                Catch ex As Exception
                    MsgBox(ex.Message, MsgBoxStyle.Critical, "Error")
                End Try
            Else
                MsgBox("Sorry the fields from announcement are already full!", MsgBoxStyle.Critical, "Full")
            End If
        End If
    End Sub

    Private Sub Timer1_Tick(sender As Object, e As EventArgs) Handles Timer1.Tick
        Call LoadMessages()
    End Sub
End Class